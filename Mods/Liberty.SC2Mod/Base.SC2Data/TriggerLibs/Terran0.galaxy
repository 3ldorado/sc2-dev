//==================================================================================================
//  Terran Melee Very Easy
//==================================================================================================

static void RandomInfantry (int player);
static void LateGround (int player);

//--------------------------------------------------------------------------------------------------
//  TerranOpenGnd0
//--------------------------------------------------------------------------------------------------
void TerranOpenGnd0 (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 8, c_TU_SCV );
    
    // around 100 resources in about 2 units
    AISetStock( player, 2, c_TU_Marine );
    TerranTechUp(player, 1);
    
	if (AIEnableVeryEasyStockOpen(player, c_TU_SCV)) {
		return;
	}

    // around 300 resources in about 3 unit
	RandomInfantry(player);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndA
//--------------------------------------------------------------------------------------------------
static void TerranMidGndA (int player) {
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);

    if (AISawCloakedUnit(player)) {
        AISetStock( player, 2, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }

	AISetStockUserData(player);
	TerranTechUp(player, 2);

	if (AIEnableVeryEasyStockMidA(player, c_TU_SCV, 4)) {
		return;
	}
	
    // around 600 resources in about 4 unit
	AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 1);
	RandomInfantry(player);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndB
//--------------------------------------------------------------------------------------------------
static void TerranMidGndB (int player) {
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);

    if (AISawCloakedUnit(player)) {
        AISetStock( player, 2, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }

	AISetStockUserData(player);
	TerranTechUp(player, 3);

    if (AIEnableVeryEasyStockMidB(player, c_TU_SCV, 4)) {
        return;
    }

    // around 900 resources in about 5 unit
    LateGround(player);
}

//--------------------------------------------------------------------------------------------------
//  LateGround
//--------------------------------------------------------------------------------------------------
static void LateGround (int player) {
	AIAddStringInt(player, c_TU_Marine, 1);
	AIAddStringInt(player, AIPickFrom2(c_TU_Hellion, c_TU_Marauder), 1);
	AIAddStringInt(player, AIPickFrom2(c_TU_Hellion, c_TU_Marine), 1);
	AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Marine), 1);
	AIAddStringInt(player, AIPickFrom2(c_TU_SiegeTank, c_TU_Ghost), 1);
	AIAddStringInt(player, AIPickFrom2(c_TU_SiegeTank, c_TU_Ghost), 1);
}

//--------------------------------------------------------------------------------------------------
//  LateGnd
//--------------------------------------------------------------------------------------------------
static void LateGnd (int player) {
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 6000, 0, c_expandDefault);

	AISetStockUserData(player);
	AISetStock( player, 1, c_TB_OrbitalCommand );
	AISetStock( player, 3, c_TU_Medivac );
	AISetStock( player, 1, c_TU_Raven );
    TerranTechUp(player, 4);

    if (AIEnableVeryEasyStockLate(player, c_TU_SCV, 4)) {
        return;
    }
    LateGround(player);
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenAir0
//--------------------------------------------------------------------------------------------------
void TerranOpenAir0 (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 8, c_TU_SCV );
    AISetStock( player, 1, c_TB_Refinery );
    AISetStock( player, 1, c_TB_Barracks );
    AISetStock( player, 1, c_TB_Factory );
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TU_Viking );
    AISetStock( player, 1, c_TB_BarracksReactor );
    AISetStock( player, 1, c_TB_SupplyDepot );
    AISetStock( player, 1, c_TU_Marine );

    AIEnableStock(player);

//    SetGasPeons(player, 3);

    //---------------------------------------------------------

    if (AITechCount(player, c_TU_Viking, c_techCountCompleteOnly) < 1) {
        return;
    }
    AIWaveMerge(player, c_waveMain, c_waveAttack);
    AISetAttackState(player, e_attackState_Attack);
    AISetMainState(player, e_mainState_Mid1, e_mainSubState_AirA);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirA
//--------------------------------------------------------------------------------------------------
static void TerranMidAirA (int player) {
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);

    AISetStockUnitNext( player, 4, c_TU_Marine, c_stockAlways );

    AISetStock( player, 1, c_TU_Viking );
    AISetStock( player, 1, c_TB_StarportTechLab );

    AISetStock( player, 2, c_TU_Viking );
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 1, c_TU_Banshee );
    AISetStock( player, 1, c_TU_Medivac );

    AISetStock( player, 1, c_TB_OrbitalCommand );

    AIEnableStock(player);

//    SetGasPeons(player, 3);

    //---------------------------------------------------------

    if (AIGetTime() < 700) {
        return;
    }
    AIWaveMerge(player, c_waveMain, c_waveAttack);
    AISetAttackState(player, e_attackState_Attack);
    AISetMainState(player, e_mainState_Mid1, e_mainSubState_AirB);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirB
//--------------------------------------------------------------------------------------------------
static void TerranMidAirB (int player) {
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 6000, 1000, c_expandDefault);

    AISetStockUnitNext( player, 4, c_TU_Marine, c_stockAlways );
    AISetStockUnitNext( player, 3, c_TU_Viking, c_stockAlways );
    AISetStockUnitNext( player, 1, c_TU_Raven, c_stockAlways );
    AISetStockUnitNext( player, 1, c_TU_Medivac, c_stockAlways );
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStockUnitNext( player, 3, c_TB_MissileTurret, c_stockIdle );
    AISetStockUnitNext( player, 2, c_TU_Banshee, c_stockAlways );
    AISetStockUnitNext( player, 1, c_TU_Battlecruiser, c_stockAlways );

    AIEnableStock(player);

//    SetGasPeons(player, 4);

    //---------------------------------------------------------

    if (AIGetTime() < 1200) {
        return;
    }
    AIWaveMerge(player, c_waveMain, c_waveAttack);
    AISetAttackState(player, e_attackState_Attack);
    AISetMainState(player, e_mainState_Late1, e_mainSubState_AirA);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
}

//--------------------------------------------------------------------------------------------------
//  LateAir
//--------------------------------------------------------------------------------------------------
static void LateAir (int player) {
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 6000, 1000, c_expandDefault);

    AISetStockUnitNext( player, 4, c_TU_Marine, c_stockAlways );
    AISetStockUnitNext( player, 5, c_TU_Viking, c_stockAlways );
    AISetStockUnitNext( player, 1, c_TU_Raven, c_stockAlways );
    AISetStockUnitNext( player, 1, c_TU_Medivac, c_stockAlways );
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStockUnitNext( player, 3, c_TB_MissileTurret, c_stockIdle );
    AISetStockUnitNext( player, 4, c_TU_Banshee, c_stockAlways );
    AISetStockUnitNext( player, 1, c_TU_Battlecruiser, c_stockAlways );

    AIEnableStock(player);

//    SetGasPeons(player, 4);

    //---------------------------------------------------------

    if (AIGetTime() % 300 > 5) {
        return;
    }
    AIWaveMerge(player, c_waveMain, c_waveAttack);
    AISetAttackState(player, e_attackState_Attack);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
}

//--------------------------------------------------------------------------------------------------
//	RandomInfantry
//--------------------------------------------------------------------------------------------------
static void RandomInfantry (int player) {
	AIAddStringInt(player, c_TU_Marine, 1);
	AIAddStringInt(player, AIPickFrom2(c_TU_Hellion, c_TU_Marauder), 1);
	AIAddStringInt(player, AIPickFrom2(c_TU_Hellion, c_TU_Marauder), 1);
}

//--------------------------------------------------------------------------------------------------
//  TerranMid0
//--------------------------------------------------------------------------------------------------
void TerranMid0 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { TerranMidGndA(player);  }
    else if (mainSubState == e_mainSubState_GndB)     { TerranMidGndB(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { TerranMidAirA(player);  }
    else if (mainSubState == e_mainSubState_AirB)     { TerranMidAirB(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid mainSubState"); }
}

//--------------------------------------------------------------------------------------------------
//  TerranLate0
//--------------------------------------------------------------------------------------------------
void TerranLate0 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { LateGnd(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { LateAir(player);  }
    else { ErrorMeleeScript(player, "Invalid Late mainSubState"); }
}
